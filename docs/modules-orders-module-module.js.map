{"version":3,"sources":["./src/app/views/modules/orders/details/details.component.html","./src/app/views/modules/orders/forms/form/form.component.html","./src/app/views/modules/orders/index/index.component.html","./src/app/views/modules/orders/tables/tables.component.html","./src/app/views/modules/orders/details/details.component.css","./src/app/views/modules/orders/details/details.component.ts","./src/app/views/modules/orders/forms/form/form.component.ts","./src/app/views/modules/orders/index/index.component.ts","./src/app/views/modules/orders/module.module.ts","./src/app/views/modules/orders/module.routing.ts","./src/app/views/modules/orders/tables/tables.component.css","./src/app/views/modules/orders/tables/tables.component.ts"],"names":[],"mappings":"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","file":"modules-orders-module-module.js","sourcesContent":["export default \"<p>details works!</p>\\r\\n\";","export default \"<style>\\r\\n \\r\\n</style>\\r\\n<!-- <sppiner *ngIf=\\\"isLoad\\\"></sppiner> -->\\r\\n\\r\\n<div style=\\\"margin-top: 10px;\\\" class=\\\"alert alert-success\\\" *ngIf='ismessage'>{{message}}</div>\\r\\n<div class=\\\"alert alert-danger\\\" *ngIf='invalidtLogin'>has an errors </div>\\r\\n<div class=\\\"col\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\"><strong>Companie</strong> <small>Form</small></div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form [formGroup]=\\\"form\\\" (submit)=\\\"save()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"company\\\">Name</label>\\r\\n          <input  [class.is-invalid]=\\\"(isValid('name') || errors?.name)\\\" \\r\\n           [class.is-valid]=\\\"isInputValid('name')\\\" \\r\\n          formControlName=\\\"name\\\" [(ngModel)]=\\\"module.name\\\" name=\\\"name\\\"  class=\\\"form-control\\\" id=\\\"name\\\" \\r\\n          type=\\\"text\\\" placeholder=\\\"Enter name Companie\\\" required  >\\r\\n          <div [class.invalid-feedback]=\\\"isValid('name') || errors?.name\\\"  *ngIf=\\\"isValid('name') || errors?.name \\\">\\r\\n            <span *ngFor=\\\"let err of messageError('name')\\\">{{ err }}</span>\\r\\n            <span *ngFor=\\\"let err of errors?.name\\\">{{ err }}</span>\\r\\n          </div>\\r\\n          \\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"company\\\">Tel</label>\\r\\n          <input [class.is-invalid]=\\\"(isValid('tel') || errors?.tel)\\\" \\r\\n           [class.is-valid]=\\\"isInputValid('tel')\\\"\\r\\n           formControlName=\\\"tel\\\" name=\\\"tel\\\" [(ngModel)]=\\\"module.tel\\\"  class=\\\"form-control\\\" id=\\\"tel\\\" \\r\\n          type=\\\"text\\\" placeholder=\\\"Enter tel Companie\\\" required >\\r\\n          <div [class.invalid-feedback]=\\\"isValid('tel') || errors?.tel\\\"  *ngIf=\\\"isValid('tel') || errors?.tel \\\">\\r\\n            <span *ngFor=\\\"let err of messageError('tel')\\\">{{ err }}</span>\\r\\n            <span *ngFor=\\\"let err of errors?.tel\\\">{{ err }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n      \\r\\n\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n\\r\\n       <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"type\\\">Type</label>\\r\\n          <select class=\\\"form-control\\\" id=\\\"type\\\"\\r\\n          [class.is-invalid]=\\\"(isValid('type') || errors?.type)\\\" \\r\\n           [class.is-valid]=\\\"isInputValid('type')\\\" \\r\\n           [(ngModel)]=\\\"module.type\\\"\\r\\n          formControlName=\\\"type\\\" name=\\\"type\\\"  class=\\\"form-control\\\" id=\\\"type\\\"\\r\\n          >\\r\\n\\r\\n            <option *ngFor=\\\"let r of valueType\\\" [selected]=\\\"module?.type==r\\\" [value]=\\\"r\\\">{{r}}</option>\\r\\n            \\r\\n          </select>\\r\\n          <div [class.invalid-feedback]=\\\"isValid('type') || errors?.type\\\"  *ngIf=\\\"isValid('type') || errors?.type \\\">\\r\\n            <span *ngFor=\\\"let err of messageError('type')\\\">{{ err }}</span>\\r\\n            <span *ngFor=\\\"let err of errors?.type\\\">{{ err }}</span>\\r\\n          </div>\\r\\n        </div>      \\r\\n          \\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"email\\\">Email</label>\\r\\n          <input [class.is-invalid]=\\\"(isValid('email') || errors?.email)\\\" \\r\\n           [class.is-valid]=\\\"isInputValid('email')\\\" [(ngModel)]=\\\"module.email\\\"  formControlName=\\\"email\\\" name=\\\"email\\\"  class=\\\"form-control\\\" id=\\\"email\\\" \\r\\n          type=\\\"text\\\" placeholder=\\\"Enter email module\\\" required >\\r\\n          <div [class.invalid-feedback]=\\\"isValid('email') || errors?.email\\\"  *ngIf=\\\"isValid('email') || errors?.email \\\">\\r\\n            <span *ngFor=\\\"let err of messageError('email')\\\">{{ err }}</span>\\r\\n            <span *ngFor=\\\"let err of errors?.email\\\">{{ err }}</span>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        \\r\\n        \\r\\n      </div>\\r\\n        <button type=\\\"submit\\\" [disabled]=\\\"form.errors != null\\\" class=\\\"btn btn-block btn-success\\\">Save Companie</button>\\r\\n      </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \" <router-outlet></router-outlet> \";","export default \"\\r\\n\\r\\n\\r\\n\\r\\n <ng-container *ngIf=\\\"modules$\\\">\\r\\n    <data-table [data]=\\\"modules$\\\" [settings]=\\\"settings\\\" [loading]=\\\"true\\\">\\r\\n    </data-table>\\r\\n  </ng-container>   \";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL21vZHVsZXMvb3JkZXJzL2RldGFpbHMvZGV0YWlscy5jb21wb25lbnQuY3NzIn0= */\";","import { UserService } from '../../users/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\nimport { error } from 'protractor';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\n\r\n\r\nimport { AuthService } from '../../../../../services/auth.service';\r\nimport { ErorrFrormService } from '../../../../../services/error.form.service';\r\nimport { RedirectService } from '../../../../../services/redirect.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { OrderService } from '../../services/service.service';\r\n\r\n\r\n@Component({\r\n  selector: 'edit-user',\r\n  templateUrl: 'form.component.html'\r\n})\r\nexport class FormComponent implements OnInit {\r\n  ismessage\r\n  valueType ;\r\n  form:FormGroup;\r\n  errors:any;\r\n  module:any={};\r\n  isLoad = false;\r\n  message=\"edit Module success\"\r\n  invalidtLogin:Boolean\r\n  constructor( \r\n    private error: ErorrFrormService,\r\n    private service :OrderService,\r\n    private route:ActivatedRoute,\r\n    private auth:AuthService\r\n  ) {\r\n    this.getEdit();\r\n    this.ismessage=false;\r\n    this.valueType=['Transporteur','Administrateur','Chargeur']\r\n  }\r\n          \r\n  \r\n  ngOnInit(): void {\r\n    this.form = new FormGroup({\r\n      name: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(80),\r\n      ]),\r\n      email: new FormControl('', [\r\n        Validators.required,\r\n        Validators.minLength(4),\r\n        Validators.maxLength(80),\r\n      ]),\r\n      tel: new FormControl('', [\r\n        Validators.required,\r\n\r\n      ]),\r\n      type: new FormControl('', [\r\n        Validators.required,\r\n\r\n        \r\n      ])\r\n       \r\n \r\n     \r\n    });\r\n  }\r\n  getEdit(){\r\n    let id = this.route.snapshot.queryParams.id;\r\n    this.service.search({_id:id}).subscribe(res=>{\r\n     \r\n    })\r\n    \r\n  }\r\n  isValid(control) {\r\n    return this.error.inValid(control, this.form);\r\n  }\r\n\r\n  messageError(control) {\r\n    return this.error.messageError(control, this.form);\r\n  }\r\n  isInputValid(control){\r\n    return this.error.isInputvalid(control,this.form)\r\n  }\r\n  save(){\r\n    this.isLoad = true\r\n      this.service.create(this.module).subscribe(res=>{\r\n          if(res){\r\n            \r\n              this.ismessage=true\r\n              setTimeout(() => {\r\n                this.ismessage = false;\r\n              }, 3000)\r\n              \r\n            \r\n          }\r\n          \r\n          this.isLoad = false\r\n          \r\n      },error=>{\r\n        console.log(error)\r\n        \r\n          this.isLoad = false\r\n      });\r\n  \r\n    \r\n  }\r\n    \r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-devices',\r\n  templateUrl: './index.component.html'\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { RoutingModule } from './module.routing';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { FormComponent } from './forms/form/form.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent,\r\n    TablesComponent,\r\n    FormComponent,\r\n    DetailsComponent,\r\n    \r\n     \r\n    \r\n    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    RoutingModule,\r\n    SharedModule\r\n    \r\n\r\n\r\n   \r\n  ],\r\n  exports:[\r\n    \r\n  ]\r\n})\r\nexport class OrderModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, UrlSegment } from '@angular/router';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { FormComponent } from './forms/form/form.component';\r\n\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n \r\n        {path:'',component:TablesComponent },\r\n        {path:'edit',component:FormComponent },\r\n        {path:'add',component:FormComponent },\r\n        {path:'show',component:DetailsComponent },\r\n    \r\n   \r\n\r\n  ];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class RoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL21vZHVsZXMvb3JkZXJzL3RhYmxlcy90YWJsZXMuY29tcG9uZW50LmNzcyJ9 */\";","\r\nimport { Component } from '@angular/core';\r\nimport { OrderService } from '../services/service.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../../services/auth.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from \"../../../../store/app.reducer\"\r\nimport * as actions from \"../../../../store/orders/module.action\"\r\nimport * as moduleReducer from '../../../../store/orders/module.reducer';\r\nimport { SocketService } from '../../../../services/socket.service';\r\n\r\n@Component({\r\n  templateUrl: 'tables.component.html',\r\n  styleUrls: ['./tables.component.css']\r\n\r\n})\r\nexport class TablesComponent {\r\n\r\n\r\n  settings={\r\n    module:\"orders\",\r\n    columns:[{title:\"Date\",field:\"Date\"},{title:\"TotalHT\",field:\"TotalHT\"},\r\n    {title:\"paied\",field:\"paied\"},{title:\"status\",field:\"status\"}]\r\n  };\r\n  modules$: Observable<any>;\r\n\r\n\r\n  constructor(\r\n    private service: OrderService,\r\n    private router:Router,\r\n    private socket:SocketService,\r\n    private store:Store<fromApp.AppState>) { }\r\n\r\n   ngOnInit(): void {\r\n    this.store.dispatch(new actions.Load())\r\n    this.modules$ = this.store.select(moduleReducer.selectOrders);\r\n    this.socket.getMessage(\"broadcast\").subscribe(data=>console.log(data))\r\n   \r\n  }\r\n  delete(module){\r\n   \r\n  }\r\n\r\n  edit(module){\r\n    this.router.navigate(['/dashboard/'+this.service.module+'/edit'],{ queryParams: { id: module._id } });\r\n  }\r\n  show(module){\r\n    this.router.navigate(['/dashboard/'+this.service.module+'/show'],{ queryParams: { id: module._id } });\r\n  }\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}
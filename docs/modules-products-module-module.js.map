{"version":3,"sources":["./src/app/views/modules/products/details/details.component.html","./src/app/views/modules/products/forms/form/form.component.html","./src/app/views/modules/products/index/index.component.html","./src/app/views/modules/products/tables/tables.component.html","./src/app/services/load.service.ts","./src/app/views/modules/products/details/details.component.css","./src/app/views/modules/products/details/details.component.ts","./src/app/views/modules/products/forms/form/form.component.ts","./src/app/views/modules/products/index/index.component.ts","./src/app/views/modules/products/module.module.ts","./src/app/views/modules/products/module.routing.ts","./src/app/views/modules/products/tables/tables.component.css","./src/app/views/modules/products/tables/tables.component.ts"],"names":[],"mappings":"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","file":"modules-products-module-module.js","sourcesContent":["export default \"<p>details works!</p>\\r\\n\";","export default \"\\r\\n<div style=\\\"margin-top: 10px;\\\" class=\\\"alert alert-success\\\" *ngIf='ismessage'>{{message}}</div>\\r\\n<div class=\\\"alert alert-danger\\\" *ngIf='invalidRequest'>has an errors </div>\\r\\n<div class=\\\"col\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header\\\"><strong>Products</strong> <small>Form</small></div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <form (submit)=\\\"save()\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <!-- start form -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"company\\\">Name</label>\\r\\n              <!--[class.is-invalid]=\\\"(isValid('name') || errors?.name)\\\" [class.is-valid]=\\\"isInputValid('name')\\\"\\r\\n              -->\\r\\n              <input \\r\\n                [(ngModel)]=\\\"product.name\\\" name=\\\"name\\\" class=\\\"form-control\\\" id=\\\"name\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"Enter name Companie\\\" required>\\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid('name') || errors?.name\\\" *ngIf=\\\"isValid('name') || errors?.name \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('name')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.name\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n             <!-- start form -->\\r\\n             <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name_fr\\\">Name Francais</label>\\r\\n              <input \\r\\n                [(ngModel)]=\\\"product.name_fr\\\" name=\\\"name_fr\\\" class=\\\"form-control\\\" id=\\\"name_fr\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"Enter name Francais\\\" required>\\r\\n                \\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid('name_fr') || errors?.name_fr\\\" *ngIf=\\\"isValid('name_fr') || errors?.name_fr \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('name_fr')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.name_fr\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n            <!-- start form -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"name_en\\\">Name Englais</label>\\r\\n              <input \\r\\n                [(ngModel)]=\\\"product.name_en\\\" name=\\\"name_en\\\" class=\\\"form-control\\\" id=\\\"name_en\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"Enter name Englais\\\" required>\\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid('name_en') || errors?.name_en\\\" *ngIf=\\\"isValid('name_en') || errors?.name_en \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('name_en')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.name_en\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n            <!-- start form -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"category\\\">category</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"category\\\" \\r\\n                 [(ngModel)]=\\\"product.category\\\" name=\\\"category\\\" class=\\\"form-control\\\"\\r\\n                id=\\\"category\\\">\\r\\n\\r\\n                <option *ngFor=\\\"let cat of categories\\\" [selected]=\\\"product?.category==cat._id\\\" [value]=\\\"cat._id\\\">{{cat.name}}</option>\\r\\n\\r\\n              </select>\\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid(this) || errors?.category\\\" *ngIf=\\\"isValid(this) || errors?.category \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('category')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.category\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n            <!-- start form -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"PA\\\">Price Achat</label>\\r\\n              <input\\r\\n                name=\\\"PA\\\" [(ngModel)]=\\\"product.PA\\\" class=\\\"form-control\\\" id=\\\"PA\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"Enter PA Companie\\\" required>\\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid('PA') || errors?.PA\\\" *ngIf=\\\"isValid('PA') || errors?.PA \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('PA')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.PA\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n          </div>\\r\\n          <div class=\\\"col-sm-6\\\">\\r\\n            <!-- start form -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"price\\\">Price Vende</label>\\r\\n              <input \\r\\n                name=\\\"price\\\" [(ngModel)]=\\\"product.price\\\" class=\\\"form-control\\\" id=\\\"price\\\" type=\\\"text\\\"\\r\\n                placeholder=\\\"Enter price Companie\\\" required>\\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid('price') || errors?.price\\\" *ngIf=\\\"isValid('price') || errors?.price \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('price')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.price\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n            <!-- start form -->\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label for=\\\"CompanyID\\\">CompanyID</label>\\r\\n              <select class=\\\"form-control\\\" id=\\\"CompanyID\\\" \\r\\n                 [(ngModel)]=\\\"product.CompanyID\\\" name=\\\"CompanyID\\\" class=\\\"form-control\\\"\\r\\n                id=\\\"category\\\">\\r\\n\\r\\n                <option *ngFor=\\\"let comp of companies\\\" [selected]=\\\"product?.CompanyID==comp._id\\\" [value]=\\\"comp._id\\\">{{comp.name}}</option>\\r\\n\\r\\n              </select>\\r\\n              <!-- <div [class.invalid-feedback]=\\\"isValid(this) || errors?.CompanyID\\\" *ngIf=\\\"isValid(this) || errors?.CompanyID \\\">\\r\\n                <span *ngFor=\\\"let err of messageError('CompanyID')\\\">{{ err }}</span>\\r\\n                <span *ngFor=\\\"let err of errors?.CompanyID\\\">{{ err }}</span>\\r\\n              </div> -->\\r\\n            </div>\\r\\n            <!-- end form -->\\r\\n           \\r\\n          </div>\\r\\n          <button type=\\\"submit\\\"  class=\\\"btn btn-block btn-success\\\">Save</button>\\r\\n        </div>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","export default \" <router-outlet></router-outlet> \";","export default \"\\r\\n\\r\\n\\r\\n\\r\\n <ng-container *ngIf=\\\"modules$ && showTabel\\\">\\r\\n    <data-table  [data]=\\\"modules$\\\" [settings]=\\\"settings\\\" [loading]=\\\"true\\\">\\r\\n    </data-table>\\r\\n  </ng-container>   \";","import { Injectable, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { BaseProvider } from '../base/provider/base-provider';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from \"../store/app.reducer\"\r\nimport * as actionUsers from \"../store/users/users.action\"\r\nimport * as actionproducts from \"../store/products/module.action\"\r\nimport * as actionCompanies from \"../store/companies/companies.action\"\r\nimport * as actionOrders from \"../store/orders/module.action\"\r\nimport * as actionCatagories from \"../store/catagories/module.action\"\r\n\r\n\r\n@Injectable({\r\n  providedIn:'root'\r\n})\r\nexport class LoadService implements OnInit {\r\n\r\n\r\n  constructor( \r\n    private baseCtrl: BaseProvider,\r\n    private router:Router,\r\n    private store:Store<fromApp.AppState>\r\n\r\n  ) {\r\n  }\r\n  ngOnInit() {}\r\n  loadAll(){\r\n    this.store.dispatch(new actionUsers.Load());\r\n    this.store.dispatch(new actionCompanies.Load());\r\n    this.store.dispatch(new actionOrders.Load());\r\n    this.store.dispatch(new actionproducts.Load());\r\n    this.store.dispatch(new actionCatagories.Load());\r\n  }\r\n \r\n \r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL21vZHVsZXMvcHJvZHVjdHMvZGV0YWlscy9kZXRhaWxzLmNvbXBvbmVudC5jc3MifQ== */\";","import { UserService } from '../../users/services/user.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-details',\r\n  templateUrl: './details.component.html',\r\n  styleUrls: ['./details.component.css']\r\n})\r\nexport class DetailsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\nimport { error } from 'protractor';\r\nimport { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\r\nimport * as fromApp from \"../../../../../store/app.reducer\"\r\n\r\nimport { AuthService } from '../../../../../services/auth.service';\r\nimport { ErorrFrormService } from '../../../../../services/error.form.service';\r\nimport { RedirectService } from '../../../../../services/redirect.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../../services/service.service';\r\nimport { LoadService } from '../../../../../services/load.service';\r\nimport { Store } from '@ngrx/store';\r\nimport { Subscription } from 'rxjs';\r\n\r\n\r\n@Component({\r\n  selector: 'edit-user',\r\n  templateUrl: 'form.component.html'\r\n})\r\nexport class FormComponent implements OnInit,OnDestroy {\r\n  ismessage\r\n  errors:any;\r\n  product:any={};\r\n  companies;\r\n  categories\r\n  isLoad = false;\r\n  message=\"edit Module success\"\r\n  invalidRequest:Boolean\r\n  sub: Subscription;\r\n  products: any;\r\n  constructor( \r\n    private error: ErorrFrormService,\r\n    private service :ProductService,\r\n    private route:ActivatedRoute,\r\n    private store:Store<fromApp.AppState>,\r\n    private load:LoadService\r\n  ) {\r\n    this.load.loadAll();\r\n\r\n    \r\n    this.ismessage=false;\r\n    \r\n  }\r\n          \r\n  \r\n  ngOnInit(){\r\n    this.sub = this.store.subscribe(store=>{\r\n      this.companies = store.companies.companies;\r\n      this.categories = store.catagories.catagories;\r\n      this.products = store.products.products\r\n      if(this.products)this.getEdit();\r\n    })\r\n  }\r\n  \r\n  getEdit(){\r\n    let id = this.route.snapshot.queryParams.id;\r\n    if(id){\r\n      let product= this.products.filter(prod=>prod._id==id)[0]\r\n      Object.assign(this.product,product)\r\n    }\r\n    \r\n    \r\n  }\r\n  isValid(control) {\r\n   // console.log(control)\r\n    //return this.error.inValid(control);\r\n  }\r\n\r\n  messageError(control) {\r\n    //return this.error.messageError(control);\r\n  }\r\n  isInputValid(control){\r\n    //return this.error.isInputvalid(control)\r\n  }\r\n  \r\n  save(){\r\n    this.isLoad = true\r\n    console.log(this.product)\r\n      this.service.save(this.product).subscribe(res=>{\r\n          if(res){\r\n            console.log(res)\r\n              // this.ismessage=true\r\n              // setTimeout(() => {\r\n              //   this.ismessage = false;\r\n              // }, 3000)\r\n              \r\n            \r\n          }\r\n          \r\n          this.isLoad = false\r\n          \r\n      },error=>{\r\n        console.log(error)\r\n        \r\n          this.isLoad = false\r\n      });\r\n  \r\n    \r\n  }\r\n   ngOnDestroy(){\r\n     this.sub.unsubscribe();\r\n   } \r\n\r\n}\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-devices',\r\n  templateUrl: './index.component.html'\r\n})\r\nexport class IndexComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { SharedModule } from '../shared.module';\r\nimport { RoutingModule } from './module.routing';\r\nimport { IndexComponent } from './index/index.component';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { FormComponent } from './forms/form/form.component';\r\n\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    IndexComponent,\r\n    TablesComponent,\r\n    FormComponent,\r\n    DetailsComponent,\r\n    \r\n     \r\n    \r\n    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule, \r\n    ReactiveFormsModule,\r\n    RoutingModule,\r\n    SharedModule\r\n    \r\n\r\n\r\n   \r\n  ],\r\n  exports:[\r\n    \r\n  ]\r\n})\r\nexport class ProductModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes, UrlSegment } from '@angular/router';\r\nimport { DetailsComponent } from './details/details.component';\r\nimport { TablesComponent } from './tables/tables.component';\r\nimport { FormComponent } from './forms/form/form.component';\r\n\r\n\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n \r\n        {path:'',component:TablesComponent },\r\n        {path:'edit',component:FormComponent },\r\n        {path:'add',component:FormComponent },\r\n        {path:'show',component:DetailsComponent },\r\n    \r\n   \r\n\r\n  ];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class RoutingModule { }","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3ZpZXdzL21vZHVsZXMvcHJvZHVjdHMvdGFibGVzL3RhYmxlcy5jb21wb25lbnQuY3NzIn0= */\";","\r\nimport { Component } from '@angular/core';\r\nimport { ProductService } from '../services/service.service';\r\nimport { Subject, Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../../../services/auth.service';\r\nimport { map } from 'rxjs/operators';\r\nimport { Store } from '@ngrx/store';\r\nimport * as fromApp from \"../../../../store/app.reducer\"\r\nimport * as actions from \"../../../../store/products/module.action\"\r\nimport * as moduleReducer from '../../../../store/products/module.reducer';\r\nimport { SocketService } from '../../../../services/socket.service';\r\n\r\n@Component({\r\n  templateUrl: 'tables.component.html',\r\n  styleUrls: ['./tables.component.css']\r\n\r\n})\r\nexport class TablesComponent {\r\n\r\n\r\n  settings={\r\n    module:\"products\",\r\n    columns:[\r\n      {title:\"Name Arabe\",field:\"name\"},\r\n      {title:\"Name Francais \",field:\"name_en\"},\r\n      {title:\"Name Anglais\",field:\"name_fr\"},\r\n      {title:\"image\",field:\"images\",type:\"image\"},\r\n      {title:\"Prix de Vende\",field:\"price\",type:\"input\"},\r\n      {title:\"Prix d'Achat\",field:\"PA\",type:\"input\"},\r\n      {title:\"Nomber de Vendre\",field:\"nb_vendere\"},\r\n      {title:\"publish\",field:\"published\",type:\"button\"},\r\n      \r\n\r\n    ]\r\n  };\r\n  modules$: Observable<any>;\r\n  showTabel: boolean=true;\r\n\r\n\r\n  constructor(\r\n    private service: ProductService,\r\n    private router:Router,\r\n    private socket:SocketService,\r\n    private store:Store<fromApp.AppState>) { }\r\n\r\n   ngOnInit(): void {\r\n    this.store.dispatch(new actions.Load())\r\n    this.modules$ = this.store.select(moduleReducer.selectProducts);\r\n    this.socket.getMessage('products').subscribe(data=>{\r\n      this.showTabel = false\r\n      console.log('socket',data)\r\n      this.store.dispatch(new actions.Load_success(data))\r\n      this.showTabel =true\r\n\r\n    })\r\n   \r\n  }\r\n  delete(module){\r\n   \r\n  }\r\n\r\n  edit(module){\r\n    this.router.navigate(['/dashboard/'+this.service.module+'/edit'],{ queryParams: { id: module._id } });\r\n  }\r\n  show(module){\r\n    this.router.navigate(['/dashboard/'+this.service.module+'/show'],{ queryParams: { id: module._id } });\r\n  }\r\n  ngOnDestroy(): void {\r\n\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}